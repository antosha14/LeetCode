`
Динамическое программирование, запоминание результатов предыдущей итерации в массиве и использование их в текущей
Можно также идти с конца
Например как в этой задаче, у нас всегда 2 пути, а после них если мы пойдём с конца, все остальные пути мы можем посчитать суммой возможных путей 2 других вариантов

Сколько вариантов получить 5 из 5 - 1
5 из 4 - 1 (1 шаг)
5 из 3 - 2 - (шаг 2 на 5 или 1 на и и с 4 1 вариант ну и 5 тоже как 1)
5 из 2 - 3 (либо на 3 и там 2 варианта, либо на 4 и там 1) и так далее
Ну и ответ будет в нуле
Ну и в качестве оптимизации в памяти можно хранить только 2 последних значения, потому что следующее зависит только от них
`

`
2 последних, обе единицы (как 4 и 5 выше)
темп для запоминания, потому что мы меняем кол-во шагов для первого элемента
И можно сказать двигаемся левее
Первое и возвращаем когда оно будет в нуле
`

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    let one = 1
    let two = 1
    for (let i=0; i<n-1; i++){
        let temp = one
        one = one + two
        two = temp
    }
    return one
};